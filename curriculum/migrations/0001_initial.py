# Generated by Django 5.0.6 on 2024-07-11 03:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_experience', models.CharField(max_length=120, verbose_name="titre de la l'expérience")),
                ('description_experience', models.TextField(verbose_name="description de l'expérience")),
                ('business', models.CharField(blank=True, max_length=120, null=True, verbose_name='école ou entreprise')),
                ('start_date_of_experience', models.DateField(blank=True, null=True, verbose_name="date de début de l'expérience")),
                ('end_date_of_experience', models.DateField(blank=True, null=True, verbose_name="date de fin de l'expérience")),
                ('location_experience', models.CharField(max_length=100, verbose_name="lieu de l'expérience")),
            ],
            options={
                'verbose_name': 'Experience',
                'verbose_name_plural': 'Experiences',
            },
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_formation', models.CharField(max_length=120, verbose_name='titre de la formation')),
                ('description_formation', models.TextField(verbose_name='description de la formation')),
                ('business', models.CharField(blank=True, max_length=120, null=True, verbose_name='école ou entreprise')),
                ('start_date_of_formation', models.DateField(blank=True, null=True, verbose_name='date de début de la formation')),
                ('end_date_of_formation', models.DateField(blank=True, null=True, verbose_name='date de fin de la formation')),
                ('location_formation', models.CharField(max_length=100, verbose_name='lieu de la formation')),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
            },
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_hobby', models.CharField(max_length=120, verbose_name='titre du hobbie')),
            ],
            options={
                'verbose_name': 'Hobbie',
                'verbose_name_plural': 'Hobbies',
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='titre du curriculm')),
                ('lastname', models.CharField(max_length=120, verbose_name='nom de la personne')),
                ('firstname', models.CharField(blank=True, max_length=120, null=True, verbose_name='prénom de la personne')),
                ('type_of_Contract', models.CharField(blank=True, max_length=120, null=True, verbose_name='type de contrat')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date de naissance de la personne')),
                ('place_of_birth', models.CharField(blank=True, max_length=120, null=True, verbose_name='lieu de naissance de la personne')),
                ('address', models.CharField(blank=True, max_length=120, null=True, verbose_name='adresse de la personne')),
                ('city', models.CharField(blank=True, max_length=120, null=True, verbose_name='ville')),
                ('state', models.CharField(blank=True, max_length=120, null=True, verbose_name='état')),
                ('zip_code', models.IntegerField(blank=True, null=True, verbose_name='code postal')),
                ('phone', models.IntegerField(blank=True, null=True, verbose_name='téléphone de la personne')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='email de la personne')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/', verbose_name='photo de la personne')),
                ('motivation', models.TextField(blank=True, null=True, verbose_name='motivation de la personne')),
                ('is_active', models.BooleanField(default=False, verbose_name='curriculum is active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('experiences', models.ManyToManyField(blank=True, related_name='experiences', to='curriculum.experience')),
                ('formations', models.ManyToManyField(blank=True, related_name='formations', to='curriculum.formation')),
                ('hobbies', models.ManyToManyField(blank=True, related_name='hobbies', to='curriculum.hobby')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Info',
                'verbose_name_plural': 'Infos',
            },
        ),
        migrations.AddField(
            model_name='hobby',
            name='info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hobby_info', to='curriculum.info'),
        ),
        migrations.AddField(
            model_name='formation',
            name='info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='formations_info', to='curriculum.info'),
        ),
        migrations.AddField(
            model_name='experience',
            name='info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='experience_info', to='curriculum.info'),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_language', models.CharField(max_length=120, verbose_name='titre de la langue')),
                ('niveau_language', models.CharField(choices=[('Débutant', 'Débutant'), ('Intermédiaire', 'Intermédiaire'), ('Avancé', 'Avancé')], max_length=120, verbose_name='niveau de la langue choisie')),
                ('info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='language_info', to='curriculum.info')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.AddField(
            model_name='info',
            name='languages',
            field=models.ManyToManyField(blank=True, related_name='languages', to='curriculum.language'),
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_Skill', models.CharField(max_length=120, verbose_name='titre de la compétence')),
                ('info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skill_info', to='curriculum.info')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
            },
        ),
        migrations.AddField(
            model_name='info',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='skills', to='curriculum.skill'),
        ),
    ]
